#include<stdio.h>
#include<stdlib.h>
struct poly
{
    int data;
    int expo;
    struct poly *next,*prev;
};
typedef struct poly node;
node * create(int size)
{
    node *new=NULL,*pre,*first;
    int x,e;
    for(int i=0;i<size;i++)
    {
        printf("enter a number");
    scanf("%d",&x);
    printf("enter exponential ofx");
    scanf("%d",&e);
        new=(node*)malloc(sizeof(node));
        new->data=x;
        new->expo=e;
        new->next=NULL;
        if(i==0)
        {
           new->prev=NULL;
           pre=new;
           first=new;
        }
        else
        {
            new->prev=pre;
            pre->next=new;
            pre=new;
        }
    }
    return first;
}
node * sort(node * h,int si)
{
    node * temp=h,*n=temp->next;
   int s=si;
   for(int i=0;i<s;i++)
   {
       int c=0;
       for(int j=0;j<s-1;j++)
       {
           if(temp->expo<n->expo)
           {
               temp->expo=temp->expo+n->expo;
               n->expo=temp->expo-n->expo;
               temp->expo=temp->expo-n->expo;
                temp->data=temp->data+n->data;
                n->data=temp->data-n->data;
                temp->data=temp->data-n->data;
                c++;
           }
           temp=n;
           n=n->next;
       }
       if(c==0)
      return h;
      s--;
      temp=h;
      n=temp->next;
   }
   return h;
}
void display(node *first)
{
    node *temp=first;
    if(temp==NULL)
    printf("no list");
    else
    while(temp!=NULL)
    {
        printf("%d :",temp->expo);
        printf(" %d\n",temp->data);
        temp=temp->next;
    }
}
node* addpoly(node *h1,node* h2,int si1,int si2)
{
    if(h1==NULL && t2==NULL)
    return NULL;
    else if(h1==NULL)
    return h2;
    else if(h2==NULL)
    return h1;
    else
    {
    node *t1=h1,*t2=h2,*r=NULL,*f;
    int s1=si1,s2=si2;
    for(int i=0;i<s1+s2;i++)
    {
        if(t1->expo<t2->expo)
        {
           if(r==NULL){
           r=t2;
           f=r;}
           else
           {
                r->next=t2;
                r=r->next;
           }
           t2=t2->next;
        }
        else if(t1->expo>t2->expo)
        {
            if(r==NULL){
           r=t1;
           f=r;}
           else
           {
                r->next=t1;
                r=r->next;
           }
           t1=t1->next;
        }
        else
        {
             if(r==NULL){
            r=t1;
            f=r;}
            else
             r=t1;
            r->data=t1->data+t2->data;
            t1=t1->next;
            t2=t2->next;
        }
        if(t2==NULL){
           r->next=t1;
           break;}
           if(t1==NULL){
           r->next=t2;
           break;}
       
    }
    return f;
}}
void main()
{
    int s1,s2;
    printf("enter size of the list 1");
    scanf("%d",&s1);
    node* f1=create(s1);
    printf("enter size of the list 2");
    scanf("%d",&s2);
    node* f2=create(s2);
    f1=sort(f1,s1);
    f2=sort(f2,s2);
    node*f=addpoly(f1,f2,s1,s2);
    display(f);
}
